{"version":3,"sources":["ListItems.js","App.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faCheckSquare","faTrash","App","state","currentItem","handleInput","bind","submitItem","prop","this","setState","Date","now","preventDefault","newItem","newItems","filteredItem","filter","onSubmit","style","color","fontSize","fontWeight","placeholder","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA4CeA,MAtCf,SAAmBC,GAEjB,IAGMC,EAHQD,EAAME,MAGIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACE,uBACEC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAU,SAACC,GACTZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAGzC,+BACE,cAAC,IAAD,CACEH,UAAU,UACVU,KAAK,QAELC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAflBJ,EAAKI,QAsBpC,OACE,8BACE,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACGlB,OChCTmB,IAAQC,IAAIC,IAAeC,K,IAqIZC,E,kDAjIb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAEDyB,MAAQ,CACXvB,MAAO,GACPwB,YAAa,CACXhB,KAAM,GACNF,IAAK,KAIT,EAAKmB,YAAc,EAAKA,YAAYC,KAAjB,gBAGnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAGlB,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAElB,EAAKf,UAAY,EAAKA,UAAUe,KAAf,gBAnBA,E,+CAuBnB,SAAYE,GAEVC,KAAKC,SAAS,CACZN,YAAa,CACXhB,KAAMoB,EAAKhB,OAAOL,MAClBD,IAAKyB,KAAKC,W,wBAMhB,SAAWtB,GAETA,EAAEuB,iBAGF,IAAMC,EAAUL,KAAKN,MAAMC,YAG3B,GAAqB,KAAjBU,EAAQ1B,KAAa,CACvB,IAAM2B,EAAQ,sBAAON,KAAKN,MAAMvB,OAAlB,CAAyBkC,IACvCL,KAAKC,SAAS,CACZ9B,MAAOmC,EACPX,YAAa,CACXhB,KAAM,GACNF,IAAK,S,wBAOb,SAAWA,GACT,IAAM8B,EAAeP,KAAKN,MAAMvB,MAAMqC,QAAO,SAACnC,GAAD,OAAUA,EAAKI,MAAQA,KACpEuB,KAAKC,SAAS,CACZ9B,MAAOoC,EACPZ,YAAa,CACXhB,KAAM,GACNF,IAAK,Q,uBAKX,SAAUE,EAAMF,GACd,IAAMN,EAAQ6B,KAAKN,MAAMvB,MACzBA,EAAMC,KAAI,SAACC,GACLA,EAAKI,MAAQA,IACfJ,EAAKM,KAAOA,MAGhBqB,KAAKC,SAAS,CACZ9B,MAAOA,M,oBAIX,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAaiC,SAAUT,KAAKF,WAArC,UACE,8BACE,uBACA,mCACE,mBACEY,MAAO,CACLC,MAAO,UACPC,SAAU,OACVC,WAAY,QAJhB,2BASA,6BAGJ,uBACEtC,KAAK,OACLuC,YAAY,aAEZpC,MAAOsB,KAAKN,MAAMC,YAAYhB,KAC9BC,SAAUoB,KAAKJ,cAGjB,wBACEtB,UAAU,QACVC,KAAK,SACLmC,MAAO,CACLC,MAAO,QACPC,SAAU,OACVC,WAAY,QANhB,yBAaJ,cAAC,EAAD,CACE1C,MAAO6B,KAAKN,MAAMvB,MAClBe,WAAYc,KAAKd,WACjBJ,UAAWkB,KAAKlB,mB,GA5HRiC,IAAMC,WCJxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61e97f13.chunk.js","sourcesContent":["// 12. create new ListItem.js and ListItem.css\r\nimport React from 'react'\r\nimport './ListItems.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction ListItems(props) {\r\n  // 14. define new var call items and pass the props\r\n  const items = props.items\r\n\r\n  // 15. define listItems and map (like for loop)\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div className='list' key={item.key}>\r\n        <p>\r\n          <input\r\n            type='text'\r\n            id={item.key}\r\n            value={item.text}\r\n            onChange={(e) => {\r\n              props.setUpdate(e.target.value, item.key)\r\n            }}\r\n          ></input>\r\n          <span>\r\n            <FontAwesomeIcon\r\n              className='faicons'\r\n              icon='trash'\r\n              // 16. How to delete item\r\n              onClick={() => props.deleteItem(item.key)}\r\n            ></FontAwesomeIcon>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    )\r\n  })\r\n  return (\r\n    <div>\r\n      <FlipMove duration={350} easing='ease-in-out'>\r\n        {listItems}\r\n      </FlipMove>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItems\r\n","import React from 'react'\nimport './App.css'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport ListItems from './ListItems'\n\nlibrary.add(faCheckSquare, faTrash)\n\nclass App extends React.Component {\n  // 1. Need to do constructor\n  constructor(props) {\n    super(props)\n    // 2. Do this.state which have 2 var which are items and Object for currentItem\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: '',\n      },\n    }\n    // 9. Bind handleInput inside constructor\n    this.handleInput = this.handleInput.bind(this)\n\n    // 10. Bind submitItem inside constructor\n    this.submitItem = this.submitItem.bind(this)\n\n    // 18. Bind deleteItem inside constructor\n    this.deleteItem = this.deleteItem.bind(this)\n\n    this.setUpdate = this.setUpdate.bind(this)\n  }\n\n  // 4. Define handleInput method\n  handleInput(prop) {\n    // 5. to update the data need to use setState\n    this.setState({\n      currentItem: {\n        text: prop.target.value,\n        key: Date.now(),\n      },\n    })\n  }\n\n  // 6. do submitItem method\n  submitItem(e) {\n    // 7. to preventDefault behavior of button\n    e.preventDefault()\n\n    // 8. get current item and store in var newItem\n    const newItem = this.state.currentItem\n\n    // 11. Check the newItem is not empty and do destructuring assignmnet\n    if (newItem.text !== '') {\n      const newItems = [...this.state.items, newItem]\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: '',\n        },\n      })\n    }\n  }\n\n  // 17. Define dleete Item and filter all item that donot match and store at filteredItem\n  deleteItem(key) {\n    const filteredItem = this.state.items.filter((item) => item.key !== key)\n    this.setState({\n      items: filteredItem,\n      currentItem: {\n        text: '',\n        key: '',\n      },\n    })\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items\n    items.map((item) => {\n      if (item.key === key) {\n        item.text = text\n      }\n    })\n    this.setState({\n      items: items,\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <header>\n          <form id='to-do-form' onSubmit={this.submitItem}>\n            <p>\n              <br></br>\n              <center>\n                <p\n                  style={{\n                    color: '#ccf5f6',\n                    fontSize: '24px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  My To-Do List\n                </p>\n                <hr></hr>\n              </center>\n            </p>\n            <input\n              type='text'\n              placeholder='Enter task'\n              // 3. Give a value and  and onChange for input\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            ></input>\n\n            <button\n              className='click'\n              type='submit'\n              style={{\n                color: 'black',\n                fontSize: '14px',\n                fontWeight: 'bold',\n              }}\n            >\n              Submit\n            </button>\n          </form>\n        </header>\n        <ListItems\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}